{
	"info": {
		"_postman_id": "b348fb9f-5a59-40aa-b316-13b208a4c2bb",
		"name": "Bonzah APIs v3.1 - Endorsements",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30338341"
	},
	"item": [
		{
			"name": "1. Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set('token', pm.response.json().data.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{username}}\",\n    \"pwd\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/auth",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"auth"
					]
				},
				"description": "### Auth API\n\nThis endpoint allows users to authenticate and obtain access to the Bonzah's Insurance policy issuance system.\n\nBy default, the auth token remains valid for 15 mins (idle period). To extend this duration (for each user), kindly reach out to the admin/Bonzah.\n\nWe recommend making the auth request prior each transaction.\n\n#### Request Body Parameters\n\n- `email` (string, required): The email adsdress of the user.\n    \n- `pwd` (string, required): The password of the user.\n    \n\nThe token from this request's response is used for the subsequent APIs\n\nPlease reach out to [brandon@bonzah.com](https://mailto:brandon@bonzah.com) to obtain Testing and/or Production credentials.\n\n**Response**:-\n\n| Key | Description |\n| --- | --- |\n| status | The status of the response. 0 indicates success. |\n| txt | error message |\n| token | System generated token to access other APIs |\n| email | Logged in user |"
			},
			"response": []
		},
		{
			"name": "2. Masters",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"master_name\": \"country\",\n    \"values\": \"country\",\n    \"filter\": \"\",\n    \"filter_value\": \"\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/master",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"master"
					]
				},
				"description": "This API endpoint allows you to load master data based on the below requests.\n\n**Country Master:-**\n\n{  \n\"master_name\": \"country\",  \n\"values\": \"country\",  \n\"filter\": \"\",  \n\"filter_value\": \"\"  \n}\n\n**Country Master Response:**\n\nThis will provide pickup country list\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error message |\n| `data` | Object | An object containing the data related to the response. |\n| `data.country` | Array | An array of country names included in the response. |\n| `data.country[]` | String | A single country name from the array. Example: `United States`. |\n\n**Zipcode master:-**\n\n{  \n\"master_name\": \"zipcode\",  \n\"values\": \"city,state,country\",  \n\"filter\": \"zipcode\",  \n\"filter_value\": \"01009\"  \n}\n\n**Zipcode master Response:**\n\ncity,country & state will be fetched based on the given zipcode\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error message |\n| `data` | Object | An object containing the location data related to the response. |\n| `data.city` | String | The name of the city. Example: `Bondsville`. |\n| `data.country` | String | The country code. Example: `US` for the United States. |\n| `data.state` | String | The name of the state. Example: `Massachusetts`. |\n\n**State Master**:-\n\n{  \n\"master_name\": \"state\",  \n\"values\": \"state\",  \n\"filter\": \"country\",  \n\"filter_value\": \"United States\"  \n}\n\n**State Master Response:-**\n\nThis will provide pickup state based on the filtered country\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | An optional message or text response. |\n| `data` | Array | An array containing a list of U.S. states and territories. Each element is a string representing the name of a state or territory. |\n| `data[n]` | String | The name of a state or territory, where `n` is the index in the array. Example: `Alabama`, `Alaska`, `New York`, etc. |\n\n**Residence Country Master**:-\n\n{  \n\"master_name\": \"residence_country\",  \n\"values\": \"country\",  \n\"filter\": \"\",  \n\"filter_value\": \"\"  \n}\n\n**Residence Country Master Response:-**\n\nThis will provide residence country lilst\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | An optional message or text response. |\n| `data` | Array | An array containing a list of countries. Each element is an object representing a country. |\n| `data[n]` | Object | An object containing country information, where `n` is the index in the array. |\n| `data[n].country` | String | The name of a country, where `n` is the index in the array. Examples include \"Afghanistan\", \"Albania\", etc. |\n\n**Residence State Master:-**\n\n{  \n\"master_name\": \"residence_state\",  \n\"values\": \"state\",  \n\"filter\": \"country\",  \n\"filter_value\": \"United States\"  \n}\n\n**Residence State Master Response:-**\n\nThis will provide residence state lists based on filtered country\n\n| Field | Type | Description |\n| --- | --- | --- |\n| **status** | `integer` | Represents the status of the response. `0` indicates a successful request, while other values may indicate different statuses (e.g., errors). |\n| **txt** | `string` | A message related to the status. This field may contain additional information or error messages; in this case, it is an empty string. |\n| **data** | `array` | An array of objects, each representing a state or territory. Each object contains: |\n| state | `string` | The name of the state or territory (e.g., \"Alabama\", \"California\"). |\n\n### Request Body\n\n- `master_name` (string, required): The name of the master to be created.\n    \n- `values` (string, required): The values associated with the master.\n    \n- `filter` (string, required): The filter criteria for the master.\n    \n- `filter_value` (string, required): The value for the filter criteria."
			},
			"response": []
		},
		{
			"name": "3. Quote Save/Finalize",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let policy=pm.response.json().data;",
							"pm.environment.set('quote_id', policy.quote_id);",
							"pm.environment.set('policy_id', policy.policy_id);",
							"pm.environment.set('payment_id', policy.payment_id);",
							"pm.environment.set('total_amount', policy.total_amount);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"quote_id\": \"\",\n    \"trip_start_date\": \"03/01/2025\",\n    \"trip_end_date\": \"03/05/2025\",\n    \"pickup_country\": \"United States\",\n    \"pickup_state\": \"New York\",\n    \"drop_off_time\": \"Same\",\n    \"residence_country\": \"United States\",\n    \"residence_state\": \"New York\",\n    \"cdw_cover\": true,\n    \"rcli_cover\": true,\n    \"sli_cover\": true,\n    \"pai_cover\": false,\n    \"first_name\": \"John\",\n    \"last_name\": \"Appleseed\",\n    \"dob\": \"06/13/1984\",\n    \"pri_email_address\": \"johnappleseed@gmail.com\",\n    \"alt_email_address\": \"janeappleseed@gmail.com\",\n    \"address_line_1\": \"address1\",\n    \"address_line_2\": \"address2\",\n    \"licence_no\": \"DL000001231\",\n    \"zip_code\": \"01061\",\n    \"inspection_done\": \"Renter\",\n    \"source\": \"API\",\n    \"phone_no\": \"13431233245\",\n    \"finalize\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/quote",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"quote"
					]
				},
				"description": "## Bonzah Quote API\n\nThis API endpoint generates an insurance quote based on the data passed for the rental\n\nThis API endpoint can also be used to save a partially completed quote that can be completed at a later time (using the quote_id).\n\nTo finalize a quote (no modifications can be made), the \"finalize\" tag should pass \"1\" as it's value.\n\n_\\*Please note - Once the quote has been saved, finalized and issued - Policy modifications will not allow the change of the customer's email address._\n\n### Request\n\n- Method: POST\n    \n- Endpoint: `{{host}}/api/v1/Bonzah/quote`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n    - in-auth-token : {{token}}\n        \n\n**Request Body**  \nThe request body should be in JSON format and include the following parameters:\n\n| Key | Type | Description |  |\n| --- | --- | --- | --- |\n| quote_id | String | Unique identifier for the quote | Optional |\n| trip_start_date | date | Start date of the trip (MM/DD/YYYY HH:mm:ss) UTC time | Required |\n| trip_end_date | date | End date of the trip (MM/DD/YYYY HH:mm:ss) UTC time | Required |\n| pickup_country | String | Country for car pickup. Should be as per master | Required |\n| pickup_state | String | State for car pickup. Should be as per master | Required |\n| drop_off_time | String | Time for car drop-off.  <br>  <br>Same - If the time of vehicle drop-off is the same as the time of vehicle pick-up.  <br>  <br>Later - If the time of vehicle drop-off is later than the time of pickup | Required |\n| residence_country | String | Country of residence. Should be as per master | Required |\n| residence_state | String | State of residence. Should be as per master | Optional |\n| cdw_cover | Boolean | Whether Collision Damage Waiver is included | Required if Opted |\n| rcli_cover | Boolean | Whether Rental Car Liability Insurance is included | Required if Opted |\n| sli_cover | Boolean | Whether Supplemental Liability Insurance is included | Required if Opted |\n| pai_cover | Boolean | Whether Personal Accident Insurance is included | Required if Opted |\n| first_name | String | First name of the insured person | Required |\n| last_name | String | Last name of the insured person | Required |\n| dob | date | Date of birth of the insured person (MM/DD/YYYY) | Required |\n| pri_email_address | String | Primary email address of the insured person.  <br>  <br>\\*Emails with policy confirmation and Pre-Post trip inspection links are send to this email ID. To view policy COIs call the requests 6a,6b,6c,6d after policy issuance | Required |\n| alt_email_address | String | Alternate email address of the insured person | Optional |\n| address_line_1 | String | Address line 1 of the insured person | Required |\n| address_line_2 | String | Address line 2 of the insured person | Optional |\n| licence_no | String | Driver's licence no of the insured person | Optional |\n| zip_code | String | Zip code of the insured person | Required |\n| inspection_done | String | Indicates if inspection is done by. If it b2c pass Renter and if it is loopit or b2b pass Renter/Rental Agency. Mandatory for if CDW cover select | Required for CDW - Defaults to Rental Agency email if empty |\n| source | String | Source of the request (Ex: API) | Required |\n| phone_no | String | Phone number of the insured person (must be 11 digits long, including the country code without the + symbol, followed by the mobile number). | Required |\n| finalize | Number | 0 - Draft quote  <br>1 - Finalize quote  <br>Once finalized the quote can not be modified | Required to Finalize and Issue policy |\n\n### Response\n\nThe response will be in JSON format and will include quote_id and premium details. quote_id should be passed if you modify any details on second time hit other wise new quote will be created.\n\nStartFragment\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | error message |\n| `data` | Object | Contains the main data of the response. |\n| `data.quote_id` | String | Unique identifier for the quote. Example: `Q000000001703`. |\n| `data.quote_no` | String | Quote number associated with the quote. It will be generated If quote is finalized without any error.  <br>Example: `Q202401000403`. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.payment_id` | String | Unique identifier for the payment. It will be generated if quote is finalized wihtout any error. Example: `PY000000001056`. |\n| `data.total_amount` | Float | Total amount payable. Example: `60.26`. |\n| `data.trip_start_date` | String (DateTime) | The start date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. UTC time |\n| `data.trip_end_date` | String (DateTime) | The end date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. UTC time |\n| `data.pickup_country` | String | Country of pickup. Example: `United States`. |\n| `data.pickup_state` | String | State of pickup. Example: `New York`. |\n| `data.residence_country` | String | The residence country of the user. Example: `United States`. |\n| `data.drop_off_time` | String | Drop-off time. Example: `Same`. |\n| `data.residence_state` | String | The residence state of the user. Example: `New York`. |\n| `data.cdw_cover` | Boolean | Indicates if Collision Damage Waiver (CDW) coverage is opted. |\n| `data.rcli_cover` | Boolean | Indicates if Renter's Contingent Liability Insurance (RCLI) coverage is opted. |\n| `data.sli_cover` | Boolean | Indicates if Supplemental Liability Insurance (SLI) coverage is opted. |\n| `data.pai_cover` | Boolean | Indicates if Personal Accident Insurance (PAI) coverage is opted. |\n| `data.cdw_rate` | String | Rate for CDW coverage. Example: `\"$21.95 / 24 hours\"`. |\n| `data.rcli_rate` | String | Rate for RCLI coverage. Example: `\"$14.88 / 24 hours\"`. |\n| `data.sli_rate` | String | Rate for SLI coverage. Example: `\"$11.90 / 24 hours\"`. |\n| `data.pai_rate` | String | Rate for PAI coverage. Example: `\"$6.90 / 24 hours\"`. |\n| `data.f_cov_lable_prem1` | String | Coverage label premium 1. Example: `\"$25,000.00\"`. |\n| `data.f_cov_lable_prem2` | String | Coverage label premium 2. Example: `\"$50,000.00\"`. |\n| `data.f_cov_lable_prem3` | String | Coverage label premium 3. Example: `\"$10,000.00\"`. |\n| `data.coverage_information` | Array of Objects | List of optional coverages and their details. |\n| `data.coverage_information[].optional_addon_cover_name` | String | Name of the optional addon cover. Example: `Collision Damage Waiver (CDW)`. |\n| `data.coverage_information[].opted` | String | Indicates if the addon cover is opted. Example: `Yes`. |\n| `data.coverage_information[].optional_addon_praram1` | Float | Primary parameter related to the addon cover. Example: `21.95`. |\n| `data.coverage_information[].optional_addon_premium` | Float | Premium for the addon cover. Example: `23.78`. |\n| `data.coverage_information[].added` | Boolean | Indicates if the addon is added. Example: `true`. |\n| `data.total_premium` | Float | Total premium calculated. Example: `60.26`. |\n| `data.first_name` | String | The first name of the user. Example: `Loopit`. |\n| `data.last_name` | String | The last name of the user. Example: `User`. |\n| `data.dob` | String (Date) | Date of birth of the user. Format: `MM/DD/YYYY`. Example: `06/25/1975`. |\n| `data.pri_email_address` | String | Primary email address of the user. Example: `loopituser@gmail.com`. |\n| `data.alt_email_address` | String | Alternate email address of the user. Example: `testuser@gmail.com`. |\n| `data.address_line_1` | String | First line of the address. Example: `address1`. |\n| `data.address_line_2` | String | Second line of the address. Example: `address2`. |\n| `data.zip_code` | String | Zip code of the address. Example: `01061`. |\n| `data.phone_no` | String | Phone number of the user. Example: `13431233245`. |\n| `data.state` | String | State of the address. Example: `Massachusetts`. |\n| `data.city` | String | City of the address. Example: `Northampton`. |\n| `data.select_country` | String | Selected country. Example: `United States`. |\n| `data.select_state` | String | Selected state. Example: `New York`. |\n| `data.country` | String | Country code. Example: `US`. |\n| `data.source` | String | Source of the request. Example: API. |\n| `data.broker_name` | String | Name of the Rental |"
			},
			"response": []
		},
		{
			"name": "4. Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let policy=pm.response.json().data;",
							"pm.environment.set('rcli_pdf_id',policy.rcli_pdf_id);",
							"pm.environment.set('cdw_pdf_id', policy.cdw_pdf_id);",
							"pm.environment.set('sli_pdf_id', policy.sli_pdf_id);",
							"pm.environment.set('pai_pdf_id', policy.pai_pdf_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": \"{{total_amount}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/payment",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"payment"
					]
				},
				"description": "This endpoint allows the client to make a cash payment by sending a POST request to the specified URL. The request should include a JSON payload with the \"payment_id\" parameter containing the payment ID and the \"amount\" parameter containing the total amount to be paid.\n\n{  \n\"payment_id\": \"{{payment_id}}\",  \n\"amount\": \"{{total_amount}}\"  \n}\n\npayment_id and amount to be passed which is recived from quote finalize API.\n\nIf the entered amount is less than the total amount, it will be accepted, and the remaining balance will be displayed. The policy will be generated only after the full payment is completed.  \nIf the entered amount is more than the total amount, an 'Amount exceeds the total amount' error will be displayed.\n\nResponse will includes policy_no and policy_id. Once payment done policy will be generated\n\n**Response:-**\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error message. |\n| `data` | Object | Contains the main data of the response. |\n| `data.quote_id` | String | Unique identifier for the quote. Example: `Q000000001703`. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.trip_start_date` | String (DateTime) | The start date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. |\n| `data.trip_end_date` | String (DateTime) | The end date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. |\n| `data.pickup_country` | String | Country of pickup. Example: `United States`. |\n| `data.pickup_state` | String | State of pickup. Example: `New York`. |\n| `data.residence_country` | String | The residence country of the user. Example: `United States`. |\n| `data.drop_off_time` | String | Drop-off time. Example: `Same`. |\n| `data.residence_state` | String | The residence state of the user. Example: `New York`. |\n| `data.cdw_cover` | Boolean | Indicates if Collision Damage Waiver (CDW) coverage is opted. |\n| `data.rcli_cover` | Boolean | Indicates if Renter's Contingent Liability Insurance (RCLI) coverage is opted. |\n| `data.sli_cover` | Boolean | Indicates if Supplemental Liability Insurance (SLI) coverage is opted. |\n| `data.pai_cover` | Boolean | Indicates if Personal Accident Insurance (PAI) coverage is opted. |\n| `data.total_days` | Float | Total number of days covered. Example: `2.083333333333333`. |\n| `data.cdw_rate` | String | Rate for CDW coverage. Example: `\"$21.95 / 24 hours\"`. |\n| `data.rcli_rate` | String | Rate for RCLI coverage. Example: `\"$14.88 / 24 hours\"`. |\n| `data.sli_rate` | String | Rate for SLI coverage. Example: `\"$11.90 / 24 hours\"`. |\n| `data.pai_rate` | String | Rate for PAI coverage. Example: `\"$6.90 / 24 hours\"`. |\n| `data.f_cov_lable_prem1` | String | Coverage label premium 1. Example: `\"$25,000.00\"`. |\n| `data.f_cov_lable_prem2` | String | Coverage label premium 2. Example: `\"$50,000.00\"`. |\n| `data.f_cov_lable_prem3` | String | Coverage label premium 3. Example: `\"$10,000.00\"`. |\n| `data.coverage_information` | Array of Objects | List of optional coverages and their details. |\n| `data.coverage_information[].optional_addon_cover_name` | String | Name of the optional addon cover. Example: `Collision Damage Waiver (CDW)`. |\n| `data.coverage_information[].opted` | String | Indicates if the addon cover is opted. Example: `Yes`. |\n| `data.coverage_information[].optional_addon_praram1` | Float | Primary parameter related to the addon cover. Example: `21.95`. |\n| `data.coverage_information[].optional_addon_praram2` | String | Secondary parameter related to the addon cover. Example: `\"\"`. |\n| `data.coverage_information[].optional_addon_premium` | Float | Premium for the addon cover. Example: `23.78`. |\n| `data.coverage_information[].added` | Boolean | Indicates if the addon is added. Example: `true`. |\n| `data.coverage_information[].addon_cover_seq_no` | String | Sequence number for the addon cover. Example: `DATIGI20240924000263`. |\n| `data.coverage_information[].policy_created_date` | String (Date) | Date when the policy was created. Format: `MM/DD/YYYY`. Example: `09/24/2024`. |\n| `data.total_premium` | Float | Total premium calculated. Example: `60.26`. |\n| `data.first_name` | String | The first name of the user. Example: `Loopit`. |\n| `data.last_name` | String | The last name of the user. Example: `User`. |\n| `data.dob` | String (Date) | Date of birth of the user. Format: `MM/DD/YYYY`. Example: `06/25/1975`. |\n| `data.pri_email_address` | String | Primary email address of the user. Example: `loopituser@gmail.com`. |\n| `data.alt_email_address` | String | Alternate email address of the user. Example: `testuser@gmail.com`. |\n| `data.address_line_1` | String | First line of the address. Example: `address1`. |\n| `data.address_line_2` | String | Second line of the address. Example: `address2`. |\n| `data.zip_code` | String | Zip code of the address. Example: `01061`. |\n| `data.phone_no` | String | Phone number of the user. Example: `13431233245`. |\n| `data.state` | String | State of the address. Example: `Massachusetts`. |\n| `data.city` | String | City of the address. Example: `Northampton`. |\n| `data.country` | String | Country code. Example: `US`. |\n| `data.source` | String | Source of the request. Example: `loopit`. |\n| `data.broker_name` | String | Name of the broker. Example: `Loopit Group`. |\n| `data.select_country` | String | Selected country. Example: `United States`. |\n| `data.select_state` | String | Selected state. Example: `New York`. |\n| `data.addon_seq_nos` | Object | Contains sequence numbers for the selected addon covers. |\n| `data.addon_seq_nos['Renter's Contingent Liability Insurance (RCLI)']` | String | Sequence number for RCLI cover. Example: `RCLI20240924000244`. |\n| `data.addon_seq_nos['Collision Damage Waiver (CDW)']` | String | Sequence number for CDW cover. Example: `DATIGI20240924000263`. |\n| `data.addon_seq_nos['Supplemental Liability Insurance (SLI)']` | String | Sequence number for SLI cover. Example: `SLI20240924000177`. |\n| `data.addon_seq_nos['Personal Accident Insurance (PAI)']` | String | Sequence number for PAI cover. Example: `PAI20240924000153`. |\n| `data.cdw_pdf_id` | Integer | PDF ID for the CDW cover document. Example: `11264`. |\n| `data.rcli_pdf_id` | Integer | PDF ID for the RCLI cover document. Example: `11266`. |\n| `data.sli_pdf_id` | Integer | PDF ID for the SLI cover document. Example: `11267`. |\n| `data.pai_pdf_id` | Integer | PDF ID for the PAI cover document. Example: `11265`. |\n| `data.policy_no` | String | Policy number. Example: `BORD2024092401000009`. |\n| `data.payment_id` | String | Unique identifier for the payment. Example: `PY000000001056`. |\n| `data.premium_value` | Float | Value of the premium. Example: `60.26`. |\n| `data.total_amount` | Float | Total amount payable. Example: `60.26`. |\n| `data.total_tax` | Float | Total tax amount. Example: `0`. |\n| `data.total_recvd` | Float | Total amount received. Example: `60.26`. |"
			},
			"response": []
		},
		{
			"name": "5. View Policy",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/policy?policy_id={{policy_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"policy"
					],
					"query": [
						{
							"key": "policy_id",
							"value": "{{policy_id}}"
						}
					]
				},
				"description": "This endpoint makes an HTTP GET request to retrieve information about a specific policy. The `policy_id` parameter in the query string should be provided to identify the policy.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\nThe response will include the details of the policy identified by the `policy_id`, such as policy name, type, coverage details, and any additional information related to the policy.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error message |\n| `data` | Object | Contains the main data of the response. |\n| `data.quote_id` | String | Unique identifier for the quote. Example: `Q000000001703`. |\n| `data.quote_no` | String | Quote number. Example: `Q202401000403`. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.trip_start_date` | String (DateTime) | The start date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. UTC Time |\n| `data.trip_end_date` | String (DateTime) | The end date and time of the trip. Format: `MM/DD/YYYY HH:MM:SS`. UTC Time |\n| `data.pickup_country` | String | Country of pickup. Example: `United States`. |\n| `data.pickup_state` | String | State of pickup. Example: `New York`. |\n| `data.residence_country` | String | The residence country of the user. Example: `United States`. |\n| `data.drop_off_time` | String | Drop-off time. Example: `Same`. |\n| `data.residence_state` | String | The residence state of the user. Example: `New York`. |\n| `data.cdw_cover` | Boolean | Indicates if Collision Damage Waiver (CDW) coverage is opted. |\n| `data.rcli_cover` | Boolean | Indicates if Renter's Contingent Liability Insurance (RCLI) coverage is opted. |\n| `data.sli_cover` | Boolean | Indicates if Supplemental Liability Insurance (SLI) coverage is opted. |\n| `data.pai_cover` | Boolean | Indicates if Personal Accident Insurance (PAI) coverage is opted. |\n| `data.total_days` | Float | Total number of days covered. Example: `2.083333333333333`. |\n| `data.cdw_rate` | String | Rate for CDW coverage. Example: `\"$21.95 / 24 hours\"`. |\n| `data.rcli_rate` | String | Rate for RCLI coverage. Example: `\"$14.88 / 24 hours\"`. |\n| `data.sli_rate` | String | Rate for SLI coverage. Example: `\"$11.90 / 24 hours\"`. |\n| `data.pai_rate` | String | Rate for PAI coverage. Example: `\"$6.90 / 24 hours\"`. |\n| `data.f_cov_lable_prem1` | String | Coverage label premium 1. Example: `\"$25,000.00\"`. |\n| `data.f_cov_lable_prem2` | String | Coverage label premium 2. Example: `\"$50,000.00\"`. |\n| `data.f_cov_lable_prem3` | String | Coverage label premium 3. Example: `\"$10,000.00\"`. |\n| `data.coverage_information` | Array of Objects | List of optional coverages and their details. |\n| `data.coverage_information[].optional_addon_cover_name` | String | Name of the optional addon cover. Example: `Collision Damage Waiver (CDW)`. |\n| `data.coverage_information[].opted` | String | Indicates if the addon cover is opted. Example: `Yes`. |\n| `data.coverage_information[].optional_addon_praram1` | Float | Primary parameter related to the addon cover. Example: `21.95`. |\n| `data.coverage_information[].optional_addon_praram2` | String | Secondary parameter related to the addon cover. Example: `\"\"`. |\n| `data.coverage_information[].optional_addon_premium` | Float | Premium for the addon cover. Example: `23.78`. |\n| `data.coverage_information[].added` | Boolean | Indicates if the addon is added. Example: `true`. |\n| `data.coverage_information[].addon_cover_seq_no` | String | Sequence number for the addon cover. Example: `DATIGI20240924000263`. |\n| `data.coverage_information[].policy_created_date` | String (Date) | Date when the policy was created. Format: `MM/DD/YYYY`. Example: `09/24/2024`. |\n| `data.total_premium` | Float | Total premium calculated. Example: `60.26`. |\n| `data.first_name` | String | The first name of the user. Example: `Loopit`. |\n| `data.last_name` | String | The last name of the user. Example: `User`. |\n| `data.dob` | String (Date) | Date of birth of the user. Format: `MM/DD/YYYY`. Example: `06/25/1975`. |\n| `data.pri_email_address` | String | Primary email address of the user. Example: `loopituser@gmail.com`. |\n| `data.alt_email_address` | String | Alternate email address of the user. Example: `testuser@gmail.com`. |\n| `data.address_line_1` | String | First line of the address. Example: `address1`. |\n| `data.address_line_2` | String | Second line of the address. Example: `address2`. |\n| `data.zip_code` | String | Zip code of the address. Example: `01061`. |\n| `data.phone_no` | String | Phone number of the user. Example: `13431233245`. |\n| `data.state` | String | State of the address. Example: `Massachusetts`. |\n| `data.city` | String | City of the address. Example: `Northampton`. |\n| `data.select_country` | String | Selected country. Example: `United States`. |\n| `data.select_state` | String | Selected state. Example: `New York`. |\n| `data.country` | String | Country code. Example: `US`. |\n| `data.source` | String | Source of the request. Example: `loopit`. |\n| `data.broker_name` | String | Name of the broker. Example: `Loopit Group`. |\n| `data.policy_no` | String | Policy number. Example: `BORD2024092401000009`. |\n| `data.c_ts` | String (DateTime) | Timestamp when the record was created. Format: `MM/DD/YYYY HH:MM:SS`. UTC Time |\n| `data.payment_id` | String | Unique identifier for the payment. Example: `PY000000001056`. |\n| `data.paid_amount` | Float | Amount paid. Example: `60.26`. |\n| `data.issue_date` | String (DateTime) | Date and time when the policy was issued. Format: `MM/DD/YYYY HH:MM:SS`. UTC Time |\n| `data.cdw_pdf_id` | Integer | PDF ID for the CDW cover document. Example: `11264`. |\n| `data.rcli_pdf_id` | Integer | PDF ID for the RCLI cover document. Example: `11266`. |\n| `data.sli_pdf_id` | Integer | PDF ID for the SLI cover document. Example: `11267`. |\n| `data.pai_pdf_id` | Integer | PDF ID for the PAI cover document. Example: `11265`. |"
			},
			"response": []
		},
		{
			"name": "6a CDW Download PDF",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/policy/data/{{policy_id}}?data_id={{cdw_pdf_id}}&download=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"policy",
						"data",
						"{{policy_id}}"
					],
					"query": [
						{
							"key": "data_id",
							"value": "{{cdw_pdf_id}}"
						},
						{
							"key": "download",
							"value": "1"
						}
					]
				},
				"description": "This endpoint retrieves the PDF file for a specific policy by making an HTTP GET request to the specified URL. The request does not include a request body, as it is a simple GET request to download the PDF file. The response will contain the PDF file for the requested policy."
			},
			"response": []
		},
		{
			"name": "6b. RCLI Download PDF",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/policy/data/{{policy_id}}?data_id={{rcli_pdf_id}}&download=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"policy",
						"data",
						"{{policy_id}}"
					],
					"query": [
						{
							"key": "data_id",
							"value": "{{rcli_pdf_id}}"
						},
						{
							"key": "download",
							"value": "1"
						}
					]
				},
				"description": "This endpoint retrieves the RCLI Cover PDF file for a specific policy by making an HTTP GET request to the specified URL. The request does not include a request body, as it is a simple GET request to download the PDF file. The response will contain the PDF file for the requested policy."
			},
			"response": []
		},
		{
			"name": "6c. SLI Download PDF",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/policy/data/{{policy_id}}?data_id={{sli_pdf_id}}&download=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"policy",
						"data",
						"{{policy_id}}"
					],
					"query": [
						{
							"key": "data_id",
							"value": "{{sli_pdf_id}}"
						},
						{
							"key": "download",
							"value": "1"
						}
					]
				},
				"description": "This endpoint retrieves the SLI cover PDF file for a specific policy by making an HTTP GET request to the specified URL. The request does not include a request body, as it is a simple GET request to download the PDF file. The response will contain the PDF file for the requested policy."
			},
			"response": []
		},
		{
			"name": "6d. PAI Download PDF",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/policy/data/{{policy_id}}?data_id={{pai_pdf_id}}&download=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"policy",
						"data",
						"{{policy_id}}"
					],
					"query": [
						{
							"key": "data_id",
							"value": "{{pai_pdf_id}}"
						},
						{
							"key": "download",
							"value": "1"
						}
					]
				},
				"description": "This endpoint retrieves the PAI Cover PDF file for a specific policy by making an HTTP GET request to the specified URL. The request does not include a request body, as it is a simple GET request to download the PDF file. The response will contain the PDF file for the requested policy."
			},
			"response": []
		},
		{
			"name": "7. Date Change Endorsement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let policy=pm.response.json().data;",
							"pm.environment.set('endorsement_id',policy.endorsement_id);",
							"pm.environment.set('eproposal_id', policy.eproposal_id);",
							"pm.environment.set('epayment_id', policy.epayment_id);",
							"pm.environment.set('premium_value', policy.premium_value);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"endorsement_id\": \"\",\n    \"eproposal_id\": \"\",\n    \"policy_id\": \"{{policy_id}}\",\n    \"policy_start_date\": \"03/02/2025\",\n    \"policy_end_date\": \"03/09/2025\",\n    \"endorsement_remarks\": \"Endo remarks\",\n    \"finalize\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/newendorse_dc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"newendorse_dc"
					]
				},
				"description": "### Policy Date Change Modification request\n\nThis endpoint allows the creation of a new endorsement (modification) of a policy to change its start and end dates.\n\n\\*Please note - Postponing the start date is allowed, however bringing the start date forward is not supported at this time.\n\nFor scenarios where there is no change in the net policy duration - No aditional premium / refund is calculated, and the shift in dates is accepted without any approval.\n\nWhen there is an extension in the number of days, the \"10. Endorsement Payment\" API request must be called to confirm the collection of the additional premium.\n\nIn the instance where a refund amount is calculated (Reduction in policy duration / Cancelation of policy). the modification/cancelation request is then sent to Bonzah for approval. Once approved, the refund value is reinstated in the Rental's credit limit.\n\nThe status of the endorsement once submitted for approval can be received via the \"12. Endorsement Pending\" API request.\n\nFor all scenarios, the customer will receive appropriate communication/confirmation via mail (pri_email_address)\n\n**Request Body**\n\n- endorsement_id (string, optional): The ID of the endorsement.\n    \n- eproposal_id (string, optional): The ID of the e-proposal.\n    \n- policy_id (string, Required): The ID of the policy.\n    \n- policy_start_date (string, Required): The start date of the policy. (MM/DD/YYYY HH:mm:ss) UTC time\n    \n- policy_end_date (string, Required): The end date of the policy. (MM/DD/YYYY HH:mm:ss) UTC time\n    \n- endorsement_remarks (string, optional): Any remarks related to the endorsement.\n    \n- finalize (integer, Required): Indicates whether the endorsement is to be finalized. Once finalized the endorsement can not be modified. Tag value should pass \"1\". As of now \"0\" will not allow.\n    \n\n**Response**  \nThe response for this request will be in JSON format.\n\nIf the date is extended, a payment ID will be included in the response, and payment should be processed accordingly.\n\nIf the date is reduced, an endorsement will be triggered, and the underwriter will take further action.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error message |\n| `data` | Object | Contains the main data of the response. |\n| `data.message` | String | The message indicating the status for endorsement. Example: `Endorsement Proposal completed or Assigned to Underwriter` |\n| `data.endorsement_id` | String | Unique identifier for the endorsement. Example: `EN000000000057`. |\n| `data.eproposal_id` | String | Unique identifier for the endorsement proposal. Example: `EP000000000057`. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.endorsement_no` | String (nullable) | Endorsement number. If not yet generated, this will be `null`. |\n| `data.policy_no` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n| `data.endorsement_start_date` | String (Date) | Start date of the endorsement. Format: `MM/DD/YYYY`. By default, the trip start date will be used if it is in the future; otherwise, the current date will be used.. Example: 09/24/1994. |\n| `data.endorsement_name` | String | Name of the endorsement. Example: `Date Change Endorsement`. |\n| `data.epayment_id` | String | Unique identifier for the endorsement payment. Example: `PY000000001058`. |\n| `data.nstp_id` | String | Unique identifier for the non-standard transaction proposal (NSTP). Example: `N000000000043`. |\n| `data.policy_start_date` | String (DateTime) | Start date and time of the policy. Format: `MM/DD/YYYY HH:MM:SS`. Example: `09/24/2024 13:00:00`. |\n| `data.policy_end_date` | String (DateTime) | End date and time of the policy. Format: `MM/DD/YYYY HH:MM:SS`. Example: `09/26/2024 15:00:00`. |\n| `data.computed_premium_value` | Float | The computed total premium value after endorsement. Example: `115.90`. |\n| `data.premium_value` | Float | The new premium value due to the endorsement. Example: `55.64`. |\n| `data.dropoff_option` | String | Drop-off option associated with the policy. Example: `Same`. |\n| `data.premium_paid` | Float | The total premium amount paid before the endorsement. Example: `60.26`. |\n| `data.endorsement_remarks` | String | Remarks or notes related to the endorsement. Example: `Endo remarks`. |\n| `data.errors` | Array | If the errors array has values, it means the endorsement contains errors that must be cleared to finalize |"
			},
			"response": []
		},
		{
			"name": "8. Name Change Endorsement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"endorsement_id\": \"\",\n    \"eproposal_id\": \"\",\n    \"policy_id\": \"{{policy_id}}\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Name\",\n    \"address_line_1\": \"address1\",\n    \"address_line_2\": \"\",\n    \"zip_code\": \"01061\",\n    \"country\": \"US\",\n    \"state\": \"Massachusetts\",\n    \"city\": \"Northampton\",\n    \"dob\": \"07/29/1995\",\n    \"email\": \"johnappleseed@gmail.com\",\n    \"phone_no\": \"13431233246\",\n    \"endo_source\":\"API\",\n    \"finalize\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/newendorse_nc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"newendorse_nc"
					]
				},
				"description": "### Insured's Information Modification\n\nThis endpoint allows you to create a new endorsement to change personal details\n\nThere is no approval process for this request. Confirmation of the changes made are sent to the customer via email.\n\nThis API endpoint can also be used to save a partially completed endorsement that can be completed at a later time (using the endorsement_id and eproposal_id).\n\n**Request Body**\n\nThe request should include the following parameters in the raw request body:\n\n- `endorsement_id` (string): The ID of the endorsement.\n    \n- `eproposal_id` (string): The ID of the e-proposal.\n    \n- `policy_id` (string,Required): The ID of the policy.\n    \n- `first_name` (string,Required): The first name of the policyholder.\n    \n- `last_name` (string,Required): The last name of the policyholder.\n    \n- `address_line_1` (string,Required): The first line of the address.\n    \n- `address_line_2` (string,Optional): The second line of the address.\n    \n- `zip_code` (string,Required): The zip code of the address.\n    \n- `country` (string,Required): The country of the address.\n    \n- `city` (string,Required): The city of the address.\n    \n- `state` (string,Required): The state of the address.\n    \n- `dob` (string,Required): The date of birth of the policyholder.\n    \n- `phone_no` (string,Required): The phone number of the policyholder.\n    \n- endo_source (String , Required ) Source of the request (Ex: API)\n    \n- `finalize` (integer): A flag to indicate whether the endorsement should be finalized (0 for false, 1 for true). Once finalized the endorsement can not be modified\n    \n\n**Response:**\n\nThe response to this request will contain the relevant information confirming the addition of the endorsement. endorsement_no will be received once endorsement done\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | An optional message or text response. |\n| `data` | Object | Contains the main data of the response. |\n| `data.message` | String | The message indicating the endorsement status. Example: `Endorsement Proposal completed`. |\n| `data.endorsement_id` | String | Unique identifier for the endorsement. Example: `EN000000000059`. |\n| `data.eproposal_id` | String | Unique identifier for the endorsement proposal. Example: `EP000000000059`. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.endorsement_no` | String | Endorsement number associated with the policy. Example: `BORD2024092401000009/EN01`. |\n| `data.policy_no` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n| `data.endorsement_start_date` | String (Date) | Start date of the endorsement. Format:`MM/DD/YYYY`. By default, the trip start date will be used if it is in the future; otherwise, the current date will be used.  <br>Example: 09/24/1994. |\n| `data.endorsement_name` | String | Name of the endorsement. Example: `Name change endorsement`. |\n| `data.epayment_id` | String | Unique identifier for the endorsement payment. Empty if not applicable. |\n| `data.nstp_id` | String | Unique identifier for the non-standard transaction proposal (NSTP). Empty if not applicable. |\n| `data.computed_premium_value` | Float | The computed total premium value after endorsement. Example: `0`. |\n| `data.premium_value` | Float | The new premium value due to the endorsement. Example: `0`. |\n| `data.address_line_1` | String | First line of the address. Example: `tt`. |\n| `data.address_line_2` | String | Second line of the address. Empty if not provided. |\n| `data.first_name` | String | First name of the policyholder after the endorsement. Example: `Endorsed`. |\n| `data.last_name` | String | Last name of the policyholder after the endorsement. Example: `Name`. |\n| `data.email` | String | Email address of the policyholder. Example: `abc@gmail.com`. |\n| `data.zip_code` | String | ZIP code of the policyholder's address. Example: `01061`. |\n| `data.country` | String | Country code of the policyholder's address. Example: `US`. |\n| `data.state` | String | State of the policyholder's address. Example: `Massachusetts`. |\n| `data.city` | String | City of the policyholder's address. Example: `Northampton`. |\n| `data.dob` | String (Date) | Date of birth of the policyholder. Format: `MM/DD/YYYY`. Example: `07/29/1995`. |\n| `data.assigned_to` | String | Email of the person assigned to this endorsement. Example: `abc@gmail.com`. |\n| `data.errors` | Array | If the errors array has values, it means the endorsement contains errors that must be cleared to finalize |"
			},
			"response": []
		},
		{
			"name": "9. Cancellation Endorsement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let endorsement=pm.response.json().data;",
							"pm.environment.set('endorsement_id', endorsement.endorsement_id);",
							"pm.environment.set('nstp_id', endorsement.nstp_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"endorsement_id\": \"\",\r\n    \"eproposal_id\": \"\",\r\n    \"policy_id\": \"{{policy_id}}\",\r\n    \"endorsement_remarks\": \"Endo Cancellation\",\r\n    \"endo_source\":\"API\",\r\n    \"finalize\": 1\r\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/newendorse_cncl",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"newendorse_cncl"
					]
				},
				"description": "### Add New Endorsement for Cancel Policy\n\nThis endpoint is used to request the cancelation of an in-effect policy.\n\nAll Cancelation requests are subject to approval by Bonzah. If approved, a refund is triggered where the amount is reinstated to the Rental's credit balance.\n\nThe customer will be notified via mail of all decisions (approved/declined).\n\n**Request Body**\n\n- `endorsement_id` (string): The ID of the endorsement.\n    \n- `eproposal_id` (string): The ID of the eproposal.\n    \n- `policy_id` (string,Required): The ID of the policy.\n    \n- `endorsement_remarks` (string): Remarks for the endorsement.\n    \n- endo_source (String , Required ) Source of the request (Ex: API)\n    \n- `finalize` (integer): Indicates whether the endorsement is to be finalized (0 for false, 1 for true).\n    \n\n**Response**  \nThe response will contain the status of the request and any relevant data related to the new endorsement and cancelled policy.  \nOnce the endorsement is finalized, it will be triggered to the underwriter to proceed further.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| status | Integer | The status of the response. Typically, 0 indicates success. |\n| txt | String | Error message if any |\n| data | Object | Contains the main data of the response. |\n| data.message | String | A message indicating the status or action taken. |\n| data.endorsement_id | String | The unique identifier for the endorsement. |\n| data.eproposal_id | String | The unique identifier for the e-proposal. |\n| data.policy_id | String | The unique identifier for the policy. |\n| data.endorsement_no | String/Null | The endorsement number, if available (otherwise null). It will generate when endorsement completed |\n| data.policy_no | String | The policy number associated with the endorsement. |\n| data.endorsement_start_date | String | The start date of the endorsement in \"MM/DD/YYYY HH:MM\" format. By default trip start date will be used |\n| data.endorsement_name | String | The name of the endorsement, e.g., \"Policy Cancellation\". |\n| data.nstp_id | String | The NSTP identifier associated with the case. |\n| data.computed_premium_value | Float | The calculated premium value for the endorsement. |\n| data.premium_value | Float | The premium amount for the endorsement, which may be negative. |\n| data.endorsement_remarks | String | Any remarks or comments related to the endorsement. |\n| `data.errors` | Array | If the errors array has values, it means the endorsement contains errors that must be cleared to finalize |"
			},
			"response": []
		},
		{
			"name": "10. Endorsement payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let endorsement=pm.response.json().data;",
							"pm.environment.set('endorsement_id', endorsement.endorsement_id);",
							"pm.environment.set('cert_id', endorsement.cert_id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"payment_id\": \"{{epayment_id}}\",\n    \"amount\": {{premium_value}}\n}"
				},
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/epayment",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"epayment"
					]
				},
				"description": "### Endorsement Payment\n\nThis endpoint allows the user to make an HTTP POST request to process the payment of the endorsement.\n\n#### Request Body\n\n- `payment_id` (string,Required): The ID of the ePayment to be processed.\n    \n- `amount` (number,Required): The amount of the premium for the ePayment.\n    \n\n#### Response\n\nOnce payment is complete, the endorsement number is generated.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | An optional message or text response. |\n| `data` | Object | Contains the main data of the response. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.eproposal_id` | String | Unique identifier for the endorsement proposal. Example: `EP000000000057`. |\n| `data.endorsement_no` | String | Endorsement number associated with the policy. Example: `BORD2024092401000009/EN02`. |\n| `data.policy_no` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n| `data.endorsement_id` | String | Unique identifier for the endorsement. Example: `EN000000000057`. |\n| `data.endorsement_start_date` | String (Date) | Start date of the endorsement. Format: `MM/DD/YYYY`. Example: 09/24/1994. |\n| `data.endorsement_name` | String | Name of the endorsement. Example: `Date Change Endorsement`. |\n| `data.epayment_id` | String | Unique identifier for the endorsement payment. Example: `PY000000001058`. |\n| `data.nstp_id` | String | Unique identifier for the non-standard transaction proposal (NSTP). Example: `N000000000043`. |\n| `data.email` | String | Email address of the policyholder. Example: `abc@gmail.com`. |\n| `data.endorsement_remarks` | String | Remarks associated with the endorsement. Empty if not provided. |\n| `data.policy_start_date` | String (Date) | Start date of the policy. Format: `MM/DD/YYYY`. Example: `09/24/2024`. |\n| `data.policy_end_date` | String (Date) | End date of the policy. Format: `MM/DD/YYYY`. Example: `09/26/2024`. |\n| `data.premium_value` | Float | The new premium value due to the endorsement. Example: `55.64`. |\n| `data.dropoff_option` | String | Option selected for dropping off. Example: `Same`. |\n| `data.address_line_1` | String | First line of the address. Example: `address1`. |\n| `data.address_line_2` | String | Second line of the address. Example: `address2`. |\n| `data.first_name` | String | First name of the policyholder. Example: `User`. |\n| `data.last_name` | String | Last name of the policyholder. Example: `Same`. |\n| `data.zip_code` | String | ZIP code of the policyholder's address. Example: `01061`. |\n| `data.country` | String | Country code of the policyholder's address. Example: `US`. |\n| `data.state` | String | State of the policyholder's address. Example: `Massachusetts`. |\n| `data.city` | String | City of the policyholder's address. Example: `Northampton`. |\n| `data.dob` | String (Date) | Date of birth of the policyholder. Format: `MM/DD/YYYY`. Example: `06/25/1975`. |\n| `data.assigned_to` | String | Email of the person assigned to this endorsement. Example: `abc@gmail.com`. |"
			},
			"response": []
		},
		{
			"name": "11. View Endorsement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/endorsement?endorsement_id={{endorsement_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"endorsement"
					],
					"query": [
						{
							"key": "endorsement_id",
							"value": "{{endorsement_id}}"
						}
					]
				},
				"description": "# Retrieve Bonzah Endorsement Details\n\nThis endpoint allows you to retrieve the details of a specific Bonzah endorsement by providing the endorsement ID as a query parameter.\n\n## Request\n\n### Request URL\n\n- Method: GET\n    \n- URL: `{{host}}/api/v1/Bonzah/endorsement?endorsement_id={{endorsement_id}}`\n    \n\n### Request Query Parameters\n\n- `endorsement_id` (string, required): The ID of the endorsement for which details are to be retrieved.\n    \n\n## Response\n\nThe response will be a JSON object containing the details of the Bonzah endorsement.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | Error meesage |\n| `data` | Object | Contains the main data of the response. |\n| `data.policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data.eproposal_id` | String | Unique identifier for the endorsement proposal. Example: `EP000000000057`. |\n| `data.endorsement_no` | String | Endorsement number associated with the policy. Example: `BORD2024092401000009/EN02`. |\n| `data.policy_no` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n| `data.endorsement_id` | String | Unique identifier for the endorsement. Example: `EN000000000057`. |\n| `data.email` | String | Primary email address of the policyholder. Example: `abc@gmail.com`. |\n| `data.pri_email_address` | String | Primary email address of the policyholder. (Same as `email`). |\n| `data.endorsement_start_date` | String (Date) | Start date of the endorsement. Format: `MM/DD/YYYY`. Example: 09/24/1994. |\n| `data.endorsement_name` | String | Name of the endorsement. Example: `Date Change Endorsement`. |\n| `data.epayment_id` | String | Unique identifier for the endorsement payment. Example: `PY000000001058`. |\n| `data.nstp_id` | String | Unique identifier for the non-standard transaction proposal (NSTP). Example: `N000000000043`. |\n| `data.endorsement_remarks` | String | Remarks associated with the endorsement. Empty if not provided. |\n| `data.policy_start_date` | String (Date) | Start date and time of the policy. Format: MM/DD/YYYY HH:MM:SS. UTC Time Example: 09/24/2024 13:00:00. |\n| `data.policy_end_date` | String (Date) | End date and time of the policy. Format: MM/DD/YYYY HH:MM:SS. UTC Time Example: 09/26/2024 15:00:00. |\n| `data.premium_value` | Float | The new premium value due to the endorsement. Example: `55.64`. |\n| `data.dropoff_option` | String | Option selected for dropping off. Example: `Same`. |\n| `data.address_line_1` | String | First line of the address. Example: `address1`. |\n| `data.address_line_2` | String | Second line of the address. Example: `address2`. |\n| `data.first_name` | String | First name of the policyholder. Example: `User`. |\n| `data.last_name` | String | Last name of the policyholder. Example: `Same`. |\n| `data.zip_code` | String | ZIP code of the policyholder's address. Example: `01061`. |\n| `data.country` | String | Country code of the policyholder's address. Example: `US`. |\n| `data.state` | String | State of the policyholder's address. Example: `Massachusetts`. |\n| `data.city` | String | City of the policyholder's address. Example: `Northampton`. |\n| `data.dob` | String (Date) | Date of birth of the policyholder. Format: `MM/DD/YYYY`. Example: `06/25/1975`. |\n| `data.assigned_to` | String | Email of the person assigned to this endorsement. Example: `abc@gmail.com`. |"
			},
			"response": []
		},
		{
			"name": "12. Endorsement Pending",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/endorsement_pending?policy_id={{policy_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"endorsement_pending"
					],
					"query": [
						{
							"key": "policy_id",
							"value": "{{policy_id}}"
						}
					]
				},
				"description": "### Retrieve Pending Endorsement Details\n\nThis endpoint makes an HTTP GET request to retrieve pending endorsement details for a specific policy.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{host}}/api/v1/Bonzah/endorsement_pending`\n    \n- Query Parameters:\n    \n    - `policy_id` (string, required): The ID of the policy for which pending endorsement details are to be retrieved.\n        \n\n#### Response\n\nThe response for this request will be a JSON array\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n\n| `txt` | String | An optional message or text response. |\n\n| `data` | Array | An array containing endorsement details. |\n\n| `data[ ].endorsement_id` | String | Unique identifier for the endorsement. Example: `EN000000000058`. |\n\n| `data[ ].endorsement_name` | String | Name of the endorsement. Example: `Name change endorsement`. |\n\n| `data[ ].prd_endorsement_id` | String | Unique identifier for the product endorsement. Example: `PE000000000002`. |\n\n| `data[ ].policy_id` | String | Unique identifier for the policy. Example: `P000000001703`. |\n\n| `data[ ].policy_no` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n\n| `data[ ].endorsement_no` | String or Null | Endorsement number associated with the policy. Null if not available. |\n\n| `data[ ].eproposal_id` | String | Unique identifier for the endorsement proposal. Example: `EP000000000058`. |\n\n| `data[ ].assigned_to` | String | Email of the person assigned to this endorsement. Example: `loopituser@insillion.com`. |\n\n| `data[ ].status` | String | Status of the endorsement. Example: `In Progress`. |\n\n| `data[ ].assigned_on` | String (DateTime) | Date and time when the endorsement was assigned. Format: `MM/DD/YYYY HH:MM:SS`. Example: `09/24/2024 05:35:54`. |\n\n| `data[ ].created_by` | String | Email of the user who created the endorsement. Example: `loopituser@insillion.com`. |"
			},
			"response": []
		},
		{
			"name": "13. List of Endorsements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/v1/Bonzah/endorsement_completed?policy_id={{policy_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"Bonzah",
						"endorsement_completed"
					],
					"query": [
						{
							"key": "policy_id",
							"value": "{{policy_id}}"
						}
					]
				},
				"description": "This endpoint sends an HTTP GET request to retrieve information about completed endorsements for a specific policy. The `policy_id` query parameter should be included in the request URL to specify the policy for which the endorsement information is required.\n\n### Request Body\n\nThis endpoint does not require a request body.\n\n### Response Body\n\nThe response will include the details of the completed endorsements for the specified policy, such as endorsement ID, endorsement No, and any additional relevant information.\n\n| **Field Name** | **Type** | **Description** |\n| --- | --- | --- |\n| `status` | Integer | The status of the response. Typically, `0` indicates success. |\n| `txt` | String | An optional message or text response. |\n| `data` | Array | An array containing endorsement details. |\n| `data[ ].endorsementId` | String | Unique identifier for the endorsement. Example: `EN000000000057`. |\n| `data[ ].policyId` | String | Unique identifier for the policy. Example: `P000000001703`. |\n| `data[ ].policyNo` | String | Policy number associated with the endorsement. Example: `BORD2024092401000009`. |\n| `data[ ].endorsementNo` | String | Endorsement number associated with the policy. Example: `BORD2024092401000009/EN02`. |\n| `data[ ].insuredName` | String | Name of the insured person. Example: `Loopit User`. |\n| `data[ ].endorsementName` | String | Name of the endorsement. Example: `Date Change Endorsement`. |\n| `data[ ].insuredPhone` | String | Phone number of the insured person. Example: `13431233245`. |\n| `data[ ].insuredEmail` | String | Email address of the insured person. Example: `loopituser@gmail.com`. |\n| `data[ ].premium` | String | The premium associated with the endorsement. If no premium, it is an empty string. Example: `55.64`. |\n| `data[ ].endorsedBy` | String | Email of the person who endorsed the policy. Example: `loopituser@insillion.com`. |\n| `data[ ].created` | String (DateTime) | Date and time when the endorsement was created. Format: `MM/DD/YYYY HH:MM:SS`. Example: `09/24/2024 05:36:42`. |\n| `data[ ].certId` | String or Null | Certificate ID associated with the endorsement. Empty string if not available. |\n| `data[ ].effectiveDate` | String (Date) | Date when the endorsement becomes effective. Format: `MM/DD/YYYY`. Example: `09/24/2024`. |\n| `data[ ].endorsementType` | String | Type of endorsement, either `Premium bearing` or `Non-Premium bearing`. Example: `Premium bearing`. |"
			},
			"response": []
		},
		{
			"name": "14. Remove Pending Endorsement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let endorsement=pm.response.json().data;",
							"pm.environment.set('endorsement_id', endorsement.endorsement_id);",
							"pm.environment.set('nstp_id', endorsement.nstp_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "in-auth-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/v2/eproposal/{{eproposal_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v2",
						"eproposal",
						"{{eproposal_id}}"
					]
				},
				"description": "#### **Remove Pending Endorsement**\n\nThis endpoint allows you to remove pending endorsement. The eproposal_id parameter in the query string should be provided to identify the endorsement.\n\n**Response**  \nThe response will contain the status of the request, and the data object will be empty. A status of 0 indicates that the pending endorsement has been successfully deleted. If the status is not 0, it will indicate an error, with the error message provided in the txt field and a corresponding status code."
			},
			"response": []
		}
	]
}